     1                                  [org 0x7e00]
     2                                  [bits 16]
     3                                  
     4 00000000 68[DF02]                push welcome_msg
     5 00000003 E84600                  call puts
     6                                  
     7 00000006 B488                    mov ah, 0x88
     8 00000008 CD15                    int 0x15
     9 0000000A A3[2703]                mov word [mem_size], ax
    10                                  
    11 0000000D 50                      push ax
    12 0000000E E85200                  call print_int
    13                                  
    14 00000011 68[0403]                push mb_msg
    15 00000014 E83500                  call puts
    16                                  
    17 00000017 FA                      cli
    18 00000018 0F0116[4600]            lgdt [GDT_Descriptor]
    19 0000001D 0F20C0                  mov eax, cr0
    20 00000020 6683C801                or eax, 1
    21 00000024 0F22C0                  mov cr0, eax
    22                                  
    23 00000027 EA[8800]0800            jmp CODE_SEG:start_protected_mode
    24                                  
    25 0000002C EBFE                    jmp $
    26                                  
    27                                  CODE_SEG equ kernel_code_descriptor - GDT_Start
    28                                  DATA_SEG equ kernel_data_descriptor - GDT_Start
    29                                  
    30                                  GDT_Start:
    31                                  	null_descriptor:
    32 0000002E 00000000                		dd 0
    33 00000032 00000000                		dd 0
    34                                  	kernel_code_descriptor:
    35 00000036 FFFF                    		dw 0xffff
    36 00000038 0000                    		dw 0
    37 0000003A 00                      		db 0
    38 0000003B 9A                      		db 0x9a
    39 0000003C CF                      		db 0xcf
    40 0000003D 00                      		db 0
    41                                  	kernel_data_descriptor:
    42 0000003E FFFF                    		dw 0xffff
    43 00000040 0000                    		dw 0
    44 00000042 00                      		db 0
    45 00000043 92                      		db 0x92
    46 00000044 CF                      		db 0xcf
    47 00000045 00                      		db 0
    48                                  	GDT_End:
    49                                  
    50                                  GDT_Descriptor:
    51 00000046 1700                    	dw GDT_End - GDT_Start - 1 ;size
    52 00000048 [2E000000]              	dd GDT_Start ;start
    53                                  
    54                                  puts: 
    55 0000004C 55                          push bp
    56 0000004D 89E5                        mov bp, sp
    57 0000004F 8B7604                      mov si, word [bp+4]
    58                                  
    59                                      puts_loop:
    60 00000052 8A04                            mov al, byte [si]
    61 00000054 46                              inc si
    62 00000055 3C00                            cmp al, 0
    63 00000057 7406                            je puts_done
    64 00000059 B40E                            mov ah, 0x0e
    65 0000005B CD10                            int 0x10
    66 0000005D EBF3                            jmp puts_loop
    67                                  
    68                                      puts_done:
    69 0000005F 5D                              pop bp
    70 00000060 C20200                          ret 0x2
    71                                  
    72                                  print_int:
    73 00000063 55                          push bp
    74 00000064 89E5                        mov bp, sp
    75 00000066 8B4604                      mov ax, word [bp+4]
    76 00000069 31D2                        xor dx, dx
    77 0000006B B90010                      mov cx, 0x1000
    78 0000006E BB[1303]                    mov bx, charset
    79                                  
    80                                      print_int_loop:
    81 00000071 F7F1                            div cx
    82 00000073 B40E                            mov ah, 0x0e
    83 00000075 D7                              xlat
    84 00000076 CD10                            int 0x10
    85 00000078 89D0                            mov ax, dx
    86 0000007A 31D2                            xor dx, dx
    87 0000007C C1E904                          shr cx, 4
    88 0000007F 83F900                          cmp cx, 0
    89 00000082 75ED                            jne print_int_loop
    90                                  
    91 00000084 5D                          pop bp
    92 00000085 C20200                      ret 0x2
    93                                  
    94                                  [bits 32]
    95                                  start_protected_mode:
    96 00000088 66B81000                	mov ax, DATA_SEG
    97 0000008C 8ED8                    	mov ds, ax
    98 0000008E 8ED0                    	mov ss, ax
    99 00000090 8EC0                    	mov es, ax
   100 00000092 8EE0                    	mov fs, ax
   101 00000094 8EE8                    	mov gs, ax
   102 00000096 BD00000900              	mov ebp, 0x90000;0x7C00
   103 0000009B 89EC                    	mov esp, ebp
   104                                  
   105 0000009D C60500800B0041              mov byte [0xb8000], 'A'
   106                                  
   107 000000A4 C70500000300071003-         mov dword [0x30000], 0x31007
   107 000000AD 00                 
   108 000000AE C70500080300072003-         mov dword [0x30800], 0x32007
   108 000000B7 00                 
   109                                  
   110 000000B8 E85B000000                  call fill_pt
   111                                  
   112 000000BD E838000000                  call map_kernel
   113                                  
   114                                      ; enable paging
   115 000000C2 B800000300                  mov eax, 0x30000
   116 000000C7 0F22D8                      mov cr3, eax
   117 000000CA 0F20C0                      mov eax, cr0
   118 000000CD 0D01000080                  or eax, 0x80000001
   119 000000D2 0F22C0                      mov cr0, eax
   120                                  
   121 000000D5 C60500800B0042              mov byte [0xb8000], 'B'
   122                                  
   123 000000DC 0FBF05[27030000]            movsx eax, word [mem_size]
   124 000000E3 50                          push eax
   125 000000E4 68[32010000]                push test_str
   126 000000E9 E89A000000                  call printf
   127                                  
   128 000000EE 68[23030000]                push kernel_sectors
   129 000000F3 E8(00000100)                call 0x10000
   130                                  
   131 000000F8 EBFE                        jmp $
   132                                  
   133                                  map_kernel:
   134 000000FA 31C0                        xor eax, eax
   135                                  
   136                                      map_kernel_loop:
   137 000000FC 89C3                            mov ebx, eax
   138 000000FE C1E30C                          shl ebx, 12
   139 00000101 81C300000100                    add ebx, 0x10000
   140 00000107 83CB07                          or ebx, 7
   141 0000010A 891C8500200300                  mov [eax * 4 + 0x32000], ebx
   142                                  
   143 00000111 40                              inc eax
   144 00000112 83F810                          cmp eax, 16
   145 00000115 75E5                            jne map_kernel_loop
   146                                  
   147 00000117 C3                          ret
   148                                  
   149                                  fill_pt:
   150 00000118 31C0                        xor eax, eax
   151                                  
   152                                      fill_pt_loop:
   153 0000011A 89C3                            mov ebx, eax
   154 0000011C C1E30C                          shl ebx, 12
   155 0000011F 83CB07                          or ebx, 7
   156 00000122 891C8500100300                  mov [eax * 4 + 0x31000], ebx
   157                                  
   158 00000129 40                              inc eax
   159 0000012A 3D00010000                      cmp eax, 256
   160 0000012F 75E9                            jne fill_pt_loop
   161                                      
   162 00000131 C3                          ret
   163                                  
   164 00000132 48656C6C6F2066726F-     test_str: db "Hello from Protected Mode! %x KB Memory", 0x0a, 0
   164 0000013B 6D2050726F74656374-
   164 00000144 6564204D6F64652120-
   164 0000014D 2578204B42204D656D-
   164 00000156 6F72790A00         
   165                                  
   166                                  print_dec:
   167                                  print_hex:
   168 0000015B 55                          push ebp
   169 0000015C 89E5                        mov ebp, esp
   170 0000015E 8B4508                      mov eax, dword [ebp+0x8]
   171 00000161 31D2                        xor edx, edx
   172 00000163 B900000010                  mov ecx, 0x10000000
   173 00000168 BB[13030000]                mov ebx, charset
   174                                  
   175                                      print_hex_loop:
   176 0000016D F7F1                            div ecx
   177 0000016F D7                              xlat
   178 00000170 52                              push edx
   179 00000171 50                              push eax
   180 00000172 E8E9000000                      call putc
   181 00000177 5A                              pop edx
   182 00000178 89D0                            mov eax, edx
   183 0000017A 31D2                            xor edx, edx
   184 0000017C C1E904                          shr ecx, 4
   185 0000017F 83F900                          cmp ecx, 0
   186 00000182 75E9                            jne print_hex_loop
   187                                  
   188 00000184 5D                          pop ebp
   189 00000185 C20400                      ret 0x4
   190                                  
   191                                  printf: ; cdecl
   192 00000188 55                          push ebp
   193 00000189 89E5                        mov ebp, esp
   194 0000018B B901000000                  mov ecx, 1
   195                                  
   196                                      printf_loop:
   197 00000190 8B4508                          mov eax, dword [ebp+0x8]
   198 00000193 8A00                            mov al, byte [eax]
   199 00000195 FF4508                          inc dword [ebp+0x8]
   200 00000198 3C00                            cmp al, 0
   201 0000019A 7448                            je printf_done
   202 0000019C 3C25                            cmp al, '%'
   203 0000019E 7408                            je printf_format
   204 000001A0 50                              push eax
   205 000001A1 E8BA000000                      call putc
   206 000001A6 EBE8                            jmp printf_loop
   207                                  
   208                                          printf_format:
   209 000001A8 8B4508                              mov eax, dword [ebp+0x8]
   210 000001AB 8A00                                mov al, byte [eax]
   211 000001AD 51                                  push ecx
   212 000001AE FF748D08                            push dword [ebp+0x8+ecx*4]
   213                                  
   214 000001B2 3C63                                cmp al, 'c'
   215 000001B4 7412                                je printf_char
   216 000001B6 3C73                                cmp al, 's'
   217 000001B8 7415                                je printf_str
   218 000001BA 3C78                                cmp al, 'x'
   219 000001BC 7418                                je printf_hex
   220 000001BE 6A25                                push '%'
   221 000001C0 E89B000000                          call putc
   222 000001C5 59                                  pop ecx
   223 000001C6 EBC8                                jmp printf_loop
   224                                  
   225                                              printf_char:
   226 000001C8 E893000000                              call putc
   227 000001CD EB0E                                    jmp printf_format_done
   228                                  
   229                                              printf_str:
   230 000001CF E871000000                              call puts32
   231 000001D4 EB07                                    jmp printf_format_done
   232                                  
   233                                              printf_hex:
   234 000001D6 E880FFFFFF                              call print_hex
   235 000001DB EB00                                    jmp printf_format_done
   236                                  
   237                                              printf_format_done:
   238 000001DD 59                                      pop ecx
   239 000001DE 41                                      inc ecx
   240 000001DF FF4508                                  inc dword [ebp+0x8]
   241                                          
   242 000001E2 EBAC                            jmp printf_loop
   243                                  
   244                                      printf_done:
   245 000001E4 5D                              pop ebp
   246 000001E5 C3                              ret
   247                                  
   248                                  %macro outb 2
   249                                      mov dx, %1
   250                                      mov al, %2
   251                                      out dx, al
   252                                  %endmacro
   253                                  
   254                                  set_cursor:
   255                                      outb 0x3d4, 14
   249 000001E6 66BAD403            <1>  mov dx, %1
   250 000001EA B00E                <1>  mov al, %2
   251 000001EC EE                  <1>  out dx, al
   256 000001ED A1[2F030000]                mov eax, dword [vp_pos]
   257 000001F2 C1E808                      shr eax, 8
   258                                      outb 0x3d5, al
   249 000001F5 66BAD503            <1>  mov dx, %1
   250 000001F9 88C0                <1>  mov al, %2
   251 000001FB EE                  <1>  out dx, al
   259                                      outb 0x3d4, 15
   249 000001FC 66BAD403            <1>  mov dx, %1
   250 00000200 B00F                <1>  mov al, %2
   251 00000202 EE                  <1>  out dx, al
   260 00000203 A1[2F030000]                mov eax, dword [vp_pos]
   261                                      outb 0x3d5, al
   249 00000208 66BAD503            <1>  mov dx, %1
   250 0000020C 88C0                <1>  mov al, %2
   251 0000020E EE                  <1>  out dx, al
   262 0000020F C3                          ret
   263                                  
   264                                  scroll:
   265 00000210 BB00000000                  mov ebx, 0
   266                                      scroll_loop:
   267 00000215 B8A0000000                      mov eax, ROWS*2
   268 0000021A F7E3                            mul ebx
   269 0000021C 0500800B00                      add eax, VIDEO_PTR
   270                                  
   271 00000221 89C7                            mov edi, eax
   272 00000223 89FE                            mov esi, edi
   273 00000225 81C6A0000000                    add esi, ROWS*2
   274                                          
   275 0000022B B928000000                      mov ecx, ROWS / 2
   276 00000230 F3A5                            rep movsd
   277 00000232 43                              inc ebx
   278 00000233 83FB50                          cmp ebx, ROWS
   279 00000236 7CDD                            jl scroll_loop
   280                                  
   281 00000238 B800000000                  mov eax, 0
   282 0000023D BF008F0B00                  mov edi, VIDEO_PTR + (COLUMNS-1)*ROWS*2
   283 00000242 F3AB                        rep stosd
   284 00000244 C3                          ret
   285                                  
   286                                  puts32:
   287 00000245 55                          push ebp
   288 00000246 89E5                        mov ebp, esp
   289                                  
   290                                      puts32_loop:
   291 00000248 8B7508                          mov esi, dword [ebp+0x8]
   292 0000024B 8A06                            mov al, byte [esi]
   293 0000024D 3C00                            cmp al, 0
   294 0000024F 740B                            je puts32_done
   295 00000251 50                              push eax
   296 00000252 E809000000                      call putc
   297 00000257 FF4508                          inc dword [ebp+0x8]
   298 0000025A EBEC                            jmp puts32_loop
   299                                  
   300                                      puts32_done:
   301 0000025C 5D                          pop ebp
   302 0000025D C20400                      ret 0x4
   303                                  
   304                                  putc:
   305 00000260 55                          push ebp
   306 00000261 89E5                        mov ebp, esp
   307                                  
   308 00000263 66BAFD03                    mov dx, SERIAL_PORT+5
   309                                     
   310                                      wait_transmit_empty:
   311 00000267 EC                              in al, dx
   312 00000268 A820                            test al, 0x20
   313 0000026A 74FB                            je wait_transmit_empty
   314                                  
   315 0000026C 8A4508                      mov al, byte [ebp+0x8]
   316 0000026F 66BAF803                    mov dx, SERIAL_PORT
   317 00000273 EE                          out dx, al
   318                                  
   319 00000274 5D                          pop ebp
   320 00000275 C20400                      ret 0x4
   321                                  
   322                                  putc_vga:
   323 00000278 55                          push ebp
   324 00000279 89E5                        mov ebp, esp
   325                                  
   326 0000027B 8A4508                      mov al, byte [ebp+0x8]
   327                                  
   328 0000027E 3C0A                        cmp al, 0xa
   329 00000280 7421                        je newline
   330                                  
   331                                      ; place character into video buffer
   332 00000282 8B35[2F030000]              mov esi, dword [vp_pos]
   333 00000288 88843600800B00              mov byte [VIDEO_PTR+esi*2], al
   334 0000028F A0[33030000]                mov al, byte [current_attr]
   335 00000294 88843601800B00              mov byte [VIDEO_PTR+esi*2+1], al
   336 0000029B FF05[2F030000]              inc dword [vp_pos]
   337 000002A1 EB1B                        jmp after_newline
   338                                  
   339                                  newline:
   340 000002A3 31D2                        xor edx, edx
   341 000002A5 A1[2F030000]                mov eax, dword [vp_pos]
   342 000002AA BB50000000                  mov ebx, ROWS
   343 000002AF F7F3                        div ebx
   344 000002B1 2915[2F030000]              sub dword [vp_pos], edx
   345 000002B7 8305[2F030000]50            add dword [vp_pos], ROWS
   346                                  
   347                                  after_newline:
   348 000002BE 813D[2F030000]D007-         cmp dword [vp_pos], SCREEN_SIZE
   348 000002C6 0000               
   349 000002C8 7C0C                        jl end_putc
   350 000002CA 832D[2F030000]50            sub dword [vp_pos], ROWS
   351 000002D1 E83AFFFFFF                  call scroll
   352                                  
   353                                  end_putc:
   354 000002D6 E80BFFFFFF                  call set_cursor
   355                                  
   356 000002DB 5D                          pop ebp
   357 000002DC C20400                      ret 0x4
   358                                  
   359 000002DF 57656C636F6D652074-     welcome_msg: db "Welcome to stage 2! I love Nicole!", 0x0a, 0x0d, 0
   359 000002E8 6F2073746167652032-
   359 000002F1 212049206C6F766520-
   359 000002FA 4E69636F6C65210A0D-
   359 00000303 00                 
   360 00000304 204B42204445544543-     mb_msg: db " KB DETECTED", 0x0a, 0x0d, 0
   360 0000030D 5445440A0D00       
   361                                  
   362 00000313 303132333435363738-     charset: db "0123456789ABCDEF"
   362 0000031C 39414243444546     
   363                                  
   364 00000323 0000                    kernel_sectors: dw 0
   365 00000325 ADDE                    ramdisk_sectors: dw 0xDEAD
   366 00000327 EFBE                    mem_size: dw 0xBEEF
   367 00000329 0000                    dw 0
   368 0000032B [88010000]              printf_addr: dd printf
   369                                  
   370                                  SERIAL_PORT equ 0x3F8
   371                                  
   372                                  ROWS equ 80
   373                                  COLUMNS equ 25
   374                                  SCREEN_SIZE equ ROWS*COLUMNS
   375                                  VIDEO_PTR equ 0xB8000
   376 0000032F 00000000                vp_pos: dd 0
   377 00000333 17                      current_attr: db 0x17
